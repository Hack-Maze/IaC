name: 'Terraform-destroy'

on: 
  workflow_dispatch:
  

        
permissions:
  contents: read

jobs:
  terraform-destroy:
    name: 'Terraform-destroy'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform destroy
      uses: nick-fields/retry@v3
      with:
        timeout_minutes: 20
        retry_on: error
        max_attempts: 3
        command:  terraform destroy -auto-approve
        
    - name:  IAC stopped demo channel
      uses: rjstone/discord-webhook-notify@v1.0.4
      with:
          severity: warn
          color: '#85BB65'
          details: "##  > - **Infrastructure is offline**  [Watch me](https://www.youtube.com/watch?v=JEzqoRCgD5Q)"
          
          footer:  "$$$$$"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK_URL_DEMO }}


          
      
